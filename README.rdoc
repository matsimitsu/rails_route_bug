== README

Rails project to reproduce Rails 4: NoMethodError - undefined method `valid_encoding?' for 80:Fixnum error

I have the following routes.rb file:

    RouteRedirectBug::Application.routes.draw do
    
      namespace :backend, port: 80 do
        root to: redirect('/')
      end
    
    end


When i navigate to `/backend` i get the following error:


    Started GET "/backend" for 127.0.0.1 at 2014-01-15 10:58:03 +0100
    
    NoMethodError (undefined method `valid_encoding?' for 80:Fixnum):
      actionpack (4.0.2) lib/action_dispatch/routing/redirection.rb:24:in `block in call'
      actionpack (4.0.2) lib/action_dispatch/routing/redirection.rb:22:in `each'
      actionpack (4.0.2) lib/action_dispatch/routing/redirection.rb:22:in `call'
      actionpack (4.0.2) lib/action_dispatch/journey/router.rb:71:in `block in call'
      actionpack (4.0.2) lib/action_dispatch/journey/router.rb:59:in `each'
      actionpack (4.0.2) lib/action_dispatch/journey/router.rb:59:in `call'
      actionpack (4.0.2) lib/action_dispatch/routing/route_set.rb:680:in `call'
      rack (1.5.2) lib/rack/etag.rb:23:in `call'
      rack (1.5.2) lib/rack/conditionalget.rb:25:in `call'
      rack (1.5.2) lib/rack/head.rb:11:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/params_parser.rb:27:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/flash.rb:241:in `call'
      rack (1.5.2) lib/rack/session/abstract/id.rb:225:in `context'
      rack (1.5.2) lib/rack/session/abstract/id.rb:220:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/cookies.rb:486:in `call'
      activerecord (4.0.2) lib/active_record/query_cache.rb:36:in `call'
      activerecord (4.0.2) lib/active_record/connection_adapters/abstract/connection_pool.rb:626:in `call'
      activerecord (4.0.2) lib/active_record/migration.rb:369:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'
      activesupport (4.0.2) lib/active_support/callbacks.rb:373:in `_run__1391640772267105897__call__callbacks'
      activesupport (4.0.2) lib/active_support/callbacks.rb:80:in `run_callbacks'
      actionpack (4.0.2) lib/action_dispatch/middleware/callbacks.rb:27:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/reloader.rb:64:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/remote_ip.rb:76:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
      railties (4.0.2) lib/rails/rack/logger.rb:38:in `call_app'
      railties (4.0.2) lib/rails/rack/logger.rb:20:in `block in call'
      activesupport (4.0.2) lib/active_support/tagged_logging.rb:67:in `block in tagged'
      activesupport (4.0.2) lib/active_support/tagged_logging.rb:25:in `tagged'
      activesupport (4.0.2) lib/active_support/tagged_logging.rb:67:in `tagged'
      railties (4.0.2) lib/rails/rack/logger.rb:20:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/request_id.rb:21:in `call'
      rack (1.5.2) lib/rack/methodoverride.rb:21:in `call'
      rack (1.5.2) lib/rack/runtime.rb:17:in `call'
      activesupport (4.0.2) lib/active_support/cache/strategy/local_cache.rb:83:in `call'
      rack (1.5.2) lib/rack/lock.rb:17:in `call'
      actionpack (4.0.2) lib/action_dispatch/middleware/static.rb:64:in `call'
      rack (1.5.2) lib/rack/sendfile.rb:112:in `call'
      railties (4.0.2) lib/rails/engine.rb:511:in `call'
      railties (4.0.2) lib/rails/application.rb:97:in `call'
      rack (1.5.2) lib/rack/lock.rb:17:in `call'
      rack (1.5.2) lib/rack/content_length.rb:14:in `call'
      rack (1.5.2) lib/rack/handler/webrick.rb:60:in `service'
      /Users/r/.rbenv/versions/1.9.3-p392/lib/ruby/1.9.1/webrick/httpserver.rb:138:in `service'
      /Users/r/.rbenv/versions/1.9.3-p392/lib/ruby/1.9.1/webrick/httpserver.rb:94:in `run'
      /Users/r/.rbenv/versions/1.9.3-p392/lib/ruby/1.9.1/webrick/server.rb:191:in `block in start_thread'


This seems to be related to: https://github.com/rails/rails/issues/9435 where it's fixed for `route_set`, but not for `redirect` 


This issue can be reproduced by cloning this repository and navigating to `/backend`  
